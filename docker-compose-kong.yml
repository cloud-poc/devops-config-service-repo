version: "3"
services:
  kong-migrations:
    image: "kong:latest"
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE:postgres
      - KONG_PG_HOST:kong-database
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PG_DATABASE:kong
      - KONG_PG_PASSWORD:kong
      - KONG_PG_USER:kong
    networks:
      - kong-net
    restart: on-failure
  kong:
    image: kong:latest
    user: "${KONG_USER:-root}"
    depends_on:
      - kong-database
      - kong-migrations
    environment:
      - KONG_ADMIN_ACCESS_LOG:/dev/stdout
      - KONG_ADMIN_ERROR_LOG:/dev/stderr
      - KONG_PROXY_ACCESS_LOG:/dev/stdout
      - KONG_PROXY_ERROR_LOG:/dev/stderr
      - KONG_ADMIN_LISTEN:'0.0.0.0:8001'
      - KONG_CASSANDRA_CONTACT_POINTS:kong-database
      - KONG_DATABASE:postgres
      - KONG_PG_HOST:kong-database
      - KONG_PG_DATABASE:kong
      - KONG_PG_USER:kong
      - KONG_PG_PASSWORD:kong
    networks:
      - kong-net
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
    restart: on-failure
  kong-database:
    image: postgres:latest
    environment:
      - POSTGRES_DB:kong
      - POSTGRES_USER:kong
      - POSTGRES_PASSWORD:kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_postgres_data:/var/lib/postgresql/data
  kong-dashboard:
    image: pgbi/kong-dashboard:latest
    ports:
      - "8080:8080"
    depends_on:
      - kong
    networks:
      - kong-net
      
volumes:
    kong_postgres_data: {}
#    kong_postgres_data:
#      external: true

networks:
  kong-net: